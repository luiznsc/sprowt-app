-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.alunos (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  nome text NOT NULL,
  turma_id uuid,
  data_nascimento date NOT NULL,
  responsavel text NOT NULL,
  telefone text,
  observacoes text,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  relatorios_count integer DEFAULT 0,
  observacoes_count integer DEFAULT 0,
  professor_id uuid,
  CONSTRAINT alunos_pkey PRIMARY KEY (id),
  CONSTRAINT alunos_turma_id_fkey FOREIGN KEY (turma_id) REFERENCES public.turmas(id),
  CONSTRAINT alunos_professor_id_fkey FOREIGN KEY (professor_id) REFERENCES auth.users(id)
);
CREATE TABLE public.audit_log (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  usuario_id uuid,
  tabela character varying NOT NULL,
  operacao character varying NOT NULL,
  registro_id text,
  dados_antigos jsonb,
  dados_novos jsonb,
  timestamp timestamp with time zone DEFAULT now(),
  ip_address inet,
  user_agent text,
  CONSTRAINT audit_log_pkey PRIMARY KEY (id),
  CONSTRAINT audit_log_usuario_id_fkey FOREIGN KEY (usuario_id) REFERENCES auth.users(id)
);
CREATE TABLE public.observacoes_aluno (
  id integer NOT NULL DEFAULT nextval('observacoes_aluno_id_seq'::regclass),
  id_aluno uuid NOT NULL,
  data_registro timestamp with time zone DEFAULT now(),
  tipo_obs character varying NOT NULL CHECK (tipo_obs::text = ANY (ARRAY['comportamental'::character varying, 'cognitivo'::character varying, 'motora'::character varying, 'alimentacao'::character varying, 'social'::character varying, 'comunicacao'::character varying, 'autonomia'::character varying, 'rotina'::character varying]::text[])),
  range_avaliacao integer NOT NULL CHECK (range_avaliacao >= 1 AND range_avaliacao <= 5),
  obs text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  professor_id uuid,
  CONSTRAINT observacoes_aluno_pkey PRIMARY KEY (id),
  CONSTRAINT observacoes_aluno_id_aluno_fkey FOREIGN KEY (id_aluno) REFERENCES public.alunos(id),
  CONSTRAINT observacoes_aluno_professor_id_fkey FOREIGN KEY (professor_id) REFERENCES auth.users(id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  nome text NOT NULL,
  tipo text NOT NULL CHECK (tipo = ANY (ARRAY['professor'::text, 'admin'::text])),
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.relatorios (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  aluno_id uuid,
  professor_id uuid,
  conteudo text NOT NULL,
  data date NOT NULL,
  status text DEFAULT 'rascunho'::text CHECK (status = ANY (ARRAY['rascunho'::text, 'concluido'::text])),
  gerado_por_ia boolean DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT relatorios_pkey PRIMARY KEY (id),
  CONSTRAINT relatorios_professor_id_fkey FOREIGN KEY (professor_id) REFERENCES auth.users(id),
  CONSTRAINT relatorios_aluno_id_fkey FOREIGN KEY (aluno_id) REFERENCES public.alunos(id)
);
CREATE TABLE public.turmas (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  nome text NOT NULL,
  faixa_etaria text NOT NULL,
  cor text NOT NULL,
  alunos_count integer DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  professor_id uuid,
  CONSTRAINT turmas_pkey PRIMARY KEY (id),
  CONSTRAINT turmas_professor_id_fkey FOREIGN KEY (professor_id) REFERENCES auth.users(id)
);